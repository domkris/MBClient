{"version":3,"sources":["Components/Login/Login.js","Components/Home/Modals/CreateGame.js","Components/Home/Modals/JoinGame.js","Components/Home/Home.js","Services/Socket.js","Components/Message/Message.js","Components/Transaction/Transaction.js","Components/Chat/Chat.js","Components/Home/Modals/SendMoney.js","Components/UserList/User.js","Components/UserList/UserList.js","Components/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","state","username","password","redirect","loginUser","showError","errorMessage","login","bind","register","change","submit","hideAfterSomeTime","this","data","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","success","sessionStorage","setItem","userData","_id","setState","message","catch","error","e","target","name","value","preventDefault","setTimeout","getItem","to","Navbar","bg","expand","Brand","href","src","alt","Toggle","aria-controls","Collapse","id","Nav","className","Link","Container","Row","Col","Form","onSubmit","Group","controlId","Label","Control","required","minLength","maxLength","placeholder","onChange","type","Button","variant","onClick","style","color","React","Component","CreateGame","createdBy","split","useState","setErrorMessage","gameName","setGameName","gamePassword","setGamePassword","gameAmount","setGameAmount","showCreateGameModal","setShowCreateGameModal","showErrorName","setShowErrorName","showErrorPassword","setShowErrorPassword","showErrorAmount","setShowErrorAmount","handleCreateGameModalClose","useEffect","showModal","Modal","show","onHide","Header","closeButton","Body","pattern","Footer","gameData","amount","handleRedirect","JoinGame","showJoinGameModal","setShowJoinGameModal","handleJoinGameModalClose","alert","Home","redirectToGame","gameId","foundGame","logout","joinGame","findGame","showButtons","apiUrl","removeItem","Jumbotron","Socket","io","Message","userCurrent","text","time","otherUser","Transaction","Chat","game","setConnected","welcomeMessage","setWelcomeMessage","gameMessages","setGameMessages","usersInGame","setUsersInGame","emit","on","gameMessage","users","newTransaction","map","i","key","SendMoneyModal","setShowModal","setAmount","handleModalClose","changeAmount","input","length","slice","stopPropagation","money","join","amountArray","userClicked","makeTransaction","User","user","disabled","UserList","changeShowModal","display","gridTemplateColumns","gridGap","gridAutoRows","userAmount","Game","event","elements","formMessage","options","sendToUser","selectedIndex","focus","homeRedirect","loginRedirect","exitGame","size","width","height","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7617efbb.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            redirect: false,\r\n            loginUser: false,\r\n            showError: false,\r\n            errorMessage: \"\"\r\n        }\r\n        this.login = this.login.bind(this);\r\n        this.register = this.register.bind(this);\r\n        this.change = this.change.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.hideAfterSomeTime = this.hideAfterSomeTime.bind(this);\r\n    }\r\n\r\n    login(){\r\n        if(this.state.username && this.state.password){\r\n            var data = { username: this.state.username, password : this.state.password };\r\n            fetch('https://mbanksrvr.herokuapp.com/users/login', {\r\n                method: 'POST', // or 'PUT'\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n              .then(response => response.json())\r\n              .then(data => {\r\n                console.log('Success:', data);\r\n                if(data.success){\r\n                    sessionStorage.setItem('userData', data.userData._id + \",\" + data.userData.username);\r\n                    this.setState({redirect : true});\r\n                }\r\n                else{\r\n                    this.setState({showError: true});\r\n                    this.setState({errorMessage: data.message});\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error:', error);\r\n              });\r\n            // console.log(\"evo ga\")\r\n            // console.log(this.state);\r\n            // await PostData('users/login',{ username: this.state.username, password : this.state.password }).then((result) => {\r\n            //     let responseJSON = result;\r\n            //     if(responseJSON.success){\r\n            //         sessionStorage.setItem('userData', responseJSON.userData._id + \",\" + responseJSON.userData.username);\r\n            //         this.setState({redirect : true});\r\n            //     }\r\n            // });\r\n        }else {\r\n            // upisi da je doslo do greske \r\n        }\r\n    }\r\n    register(){\r\n        var data = { username: this.state.username, password : this.state.password };\r\n        fetch('https://mbanksrvr.herokuapp.com/users/', {\r\n                method: 'POST', // or 'PUT'\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n              })\r\n              .then(response => response.json())\r\n              .then(data => {\r\n                console.log('Success:', data);\r\n                if(data.success){\r\n                     sessionStorage.setItem('userData', data.userData._id + \",\" + data.userData.username);\r\n                     this.setState({redirect : true});\r\n                }\r\n                else {\r\n                    this.setState({showError: true});\r\n                    this.setState({errorMessage: data.message});\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error:', error);\r\n              });\r\n    }\r\n    change(e){\r\n        this.setState({[e.target.name]: e.target.value});\r\n        this.setState({showError: false});\r\n    }\r\n    submit(e){\r\n        e.preventDefault();\r\n        if(this.state.loginUser){\r\n            //LOGIN\r\n            this.login();\r\n        }else{\r\n            //REGISTER\r\n            this.register();\r\n        }\r\n    }\r\n    hideAfterSomeTime(){\r\n        setTimeout(() => {\r\n            this.setState({\r\n                showError: false\r\n            });\r\n          }, 2000);\r\n    }\r\n    render(){    \r\n        \r\n        if(this.state.redirect){\r\n            return(\r\n                <Route>\r\n                    <Redirect to={'./home'}/>\r\n                </Route>);\r\n        }\r\n\r\n        if(sessionStorage.getItem(\"userData\")){\r\n            return(\r\n                <Route>\r\n                    <Redirect to={'./home'}/>\r\n                </Route>);\r\n        }\r\n        return (\r\n        <div>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand href=\"login\"><img src=\"eurocoin_64px.png\" alt=\"\"></img>MBank</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"help\">Help</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <img id=\"monopolbankImage\"src=\"eurocoin_11.png\"></img>\r\n            <Container className=\"LoginForm\">\r\n               <Row>\r\n                   <Col>\r\n                        <Form onSubmit={this.submit}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group controlId=\"formBasicUsername\">\r\n                                        <Form.Label>Username</Form.Label>\r\n                                        <Form.Control required name=\"username\" minLength=\"4\" maxLength=\"20\" placeholder=\"Enter username\" onChange= {this.change}/>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group required controlId=\"formBasicPassword\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control required name=\"password\" minLength=\"4\" maxLength=\"25\" type=\"password\" placeholder=\"Password\" onChange= {this.change}/>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Button variant=\"outline-primary\"  onClick= {() => this.setState({loginUser : true})} type=\"submit\">Login</Button>\r\n                                    <Button variant=\"outline-success\"  onClick= {() => this.setState({loginUser : false})} type=\"submit\">SignUp</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>       \r\n                   </Col>\r\n               </Row>\r\n            </Container>\r\n            <br/>\r\n            { this.state.showError ? \r\n                <Container className=\"LoginError\">\r\n                    <Row>\r\n                        <Col>\r\n                            <div style={{color: \"red\"}}>\r\n                                {this.state.errorMessage}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container> \r\n             : null }\r\n        </div>      \r\n        );    \r\n    }\r\n}\r\nexport default Login;\r\n\r\n// <Button variant=\"outline-primary\"  onClick= {this.login} type=\"submit\">Login</Button>\r\n//<Button variant=\"outline-success\"  onClick= {this.register} type=\"submit\">SignUp</Button>","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst CreateGame = (props) => {\r\n\r\n    var createdBy = sessionStorage.getItem(\"userData\").split(',')[0];\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [gameName, setGameName] = useState(\"\");\r\n    const [gamePassword, setGamePassword] = useState(\"\");\r\n    const [gameAmount, setGameAmount] = useState(0);\r\n    const [showCreateGameModal, setShowCreateGameModal] = useState(false);\r\n    const [showErrorName, setShowErrorName] = useState(false);\r\n    const [showErrorPassword, setShowErrorPassword] = useState(false);\r\n    const [showErrorAmount, setShowErrorAmount] = useState(false);\r\n\r\n    const handleCreateGameModalClose = () => {\r\n        setShowCreateGameModal(false);\r\n        setShowErrorName(false);\r\n        setShowErrorPassword(false);\r\n        setShowErrorAmount(false);\r\n    };\r\n    \r\n    const createGame = () => {\r\n        if(gameName && gamePassword && gameAmount){\r\n            var apiUrl = \"https://mbanksrvr.herokuapp.com/games\";\r\n            fetch(apiUrl,{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body: JSON.stringify({gameName, gamePassword, gameAmount, createdBy})})\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if(data.success){\r\n                    sessionStorage.setItem(\"game\", data.gameData._id + \",\" + data.gameData.name + \",\" + data.gameData.amount);\r\n                    handleCreateGameModalClose();\r\n                    props.handleRedirect(true);\r\n                }else{\r\n                    setErrorMessage(data.message);\r\n                }\r\n            });\r\n        }else {\r\n            if(!gameName){\r\n                setShowErrorName(true);\r\n            }\r\n            if(!gamePassword){\r\n                setShowErrorPassword(true);\r\n            }\r\n            if(!gameAmount){\r\n                setShowErrorAmount(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    var change = (e) => {\r\n        if(e.target.name === \"gameName\"){\r\n            setGameName(e.target.value);\r\n            setShowErrorName(false);\r\n        }\r\n        if(e.target.name === \"gamePassword\"){\r\n            setGamePassword(e.target.value);\r\n            setShowErrorPassword(false);\r\n        }\r\n        if(e.target.name === \"gameAmount\"){\r\n            setGameAmount(e.target.value);\r\n            setShowErrorAmount(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setShowCreateGameModal(props.showModal)\r\n      },[props.showModal]);\r\n\r\n    return(\r\n    <div>\r\n        <Modal className=\"modalCreateGame\"show={showCreateGameModal} onHide={handleCreateGameModalClose}>\r\n            <Modal.Header closeButton>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"formGameName\">\r\n                        <Form.Label>Game name</Form.Label>\r\n                        <Form.Control required name=\"gameName\" type=\"text\" placeholder=\"Game name..\" onChange={change}/>\r\n                        {showErrorName ? \r\n                            <div style={{color: \"red\"}}>\r\n                                Game name is required\r\n                            </div> : null}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGamePassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control name=\"gamePassword\" type=\"password\" placeholder=\"Password\"onChange={change}/>\r\n                        {showErrorPassword ? \r\n                            <div style={{color: \"red\"}}>\r\n                                Password is required\r\n                            </div> : null}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGameAmmount\">\r\n                        <Form.Label>Starting amount</Form.Label>\r\n                        <Form.Control required name=\"gameAmount\" type=\"text\" pattern=\"[0-9]*\" placeholder=\"Amount\"onChange={change}/>\r\n                        {showErrorAmount ? \r\n                            <div style={{color: \"red\"}}>\r\n                                Game amount is required\r\n                            </div> : null}\r\n                    </Form.Group>\r\n                </Form> \r\n                {errorMessage ? \r\n                    <div style={{color: \"red\"}}>\r\n                        {errorMessage}\r\n                    </div> : null\r\n                }  \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"outline-dark\" onClick={handleCreateGameModalClose}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"outline-primary\" onClick={createGame}>\r\n                Create\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </div>);\r\n}\r\nexport default CreateGame;","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst JoinGame = (props) => {\r\n    const [gameName, setGameName] = useState(\"\");\r\n    const [gamePassword, setGamePassword] = useState(\"\");\r\n    const [showJoinGameModal, setShowJoinGameModal] = useState(false);\r\n    const [showErrorName, setShowErrorName] = useState(false);\r\n    const [showErrorPassword, setShowErrorPassword] = useState(false);\r\n\r\n    const handleJoinGameModalClose = () => {\r\n        setShowJoinGameModal(false);\r\n        setShowErrorName(false);\r\n        setShowErrorPassword(false);\r\n    }\r\n\r\n    var change = (e) => {\r\n        if(e.target.name === \"gameName\"){\r\n            setGameName(e.target.value);\r\n            setShowErrorName(false);\r\n        }\r\n        if(e.target.name === \"gamePassword\"){\r\n            setGamePassword(e.target.value);\r\n            setShowErrorPassword(false);\r\n        }\r\n    }\r\n    const joinGame = () => {\r\n        if(gameName && gamePassword){ \r\n            var data = {gameName : gameName, gamePassword: gamePassword}\r\n            var apiUrl = \"https://mbanksrvr.herokuapp.com/games/joinGame\";\r\n            fetch(apiUrl, {\r\n                method: 'POST', // or 'PUT'\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                if(!data.success)\r\n                {\r\n                    alert(\"wrong game name or password\");\r\n                    // ovdi ogromna greska... upises id vrati se citav objekt ! na temelju samo id-a vrati i id i sifru\r\n                }else {\r\n                    sessionStorage.setItem(\"game\", data.gameData[0]._id + \",\" + data.gameData[0].name + \",\" + data.gameData[0].amount);\r\n                    handleJoinGameModalClose();\r\n                    props.handleRedirect(true);\r\n                }\r\n            });   \r\n        }else{\r\n            if(!gameName){\r\n                setShowErrorName(true);\r\n            }\r\n            if(!gamePassword){\r\n                setShowErrorPassword(true);\r\n            }\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        setShowJoinGameModal(props.showModal)\r\n      },[props.showModal]);\r\n\r\n      return(\r\n        <div>\r\n            <Modal show={showJoinGameModal} onHide={handleJoinGameModalClose}>\r\n                <Modal.Header closeButton>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formGameName\">\r\n                            <Form.Label>Game name</Form.Label>\r\n                            <Form.Control required name=\"gameName\" type=\"text\" placeholder=\"Game name..\" onChange={change}/>\r\n                            {showErrorName ? \r\n                            <div style={{color: \"red\"}}>\r\n                                Game name is required\r\n                            </div> : null}\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGamePassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control name=\"gamePassword\" type=\"password\" placeholder=\"Password\" onChange={change}/>\r\n                            {showErrorPassword ? \r\n                            <div style={{color: \"red\"}}>\r\n                                Password is required\r\n                            </div> : null}\r\n                        </Form.Group>\r\n                    </Form>  \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"outline-dark\" onClick={handleJoinGameModalClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"outline-primary\" onClick={joinGame}>\r\n                    Join Game\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            \r\n        </div>);\r\n}\r\nexport default JoinGame;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Col from 'react-bootstrap/Col';\r\nimport CreateGameModal from '../Home/Modals/CreateGame';\r\nimport JoinGameModal from '../Home/Modals/JoinGame';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Home.css';\r\n\r\n\r\n\r\nclass Home extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            redirectToGame: false,\r\n            gameId: '',\r\n            gamePassword: '',\r\n            foundGame: '',\r\n            showCreateGameModal: false,\r\n            showJoinGameModal: false\r\n        }\r\n        \r\n        this.logout = this.logout.bind(this);\r\n        this.joinGame = this.joinGame.bind(this);\r\n        this.change = this.change.bind(this);\r\n        this.findGame = this.findGame.bind(this);\r\n        this.showButtons = this.showButtons.bind(this);\r\n        this.showCreateGameModal = this.showCreateGameModal.bind(this);\r\n        this.showJoinGameModal = this.showJoinGameModal.bind(this);\r\n        this.handleRedirect = this.handleRedirect.bind(this);\r\n    }\r\n\r\n    handleRedirect(value){\r\n        this.setState({redirectToGame : value})\r\n    }\r\n    showCreateGameModal(){\r\n        if(this.state.showCreateGameModal){\r\n            this.setState({showCreateGameModal : false}, console.log(this.state.showCreateGameModal));\r\n        }else{\r\n            this.setState({showCreateGameModal : true}, console.log(this.state.showCreateGameModal));\r\n        }\r\n    }\r\n    showJoinGameModal(){\r\n        if(this.state.showJoinGameModal){\r\n            this.setState({showJoinGameModal : false});\r\n        }else{\r\n            this.setState({showJoinGameModal : true});\r\n        }\r\n    }\r\n    showButtons(){\r\n        if(this.state.foundGame){\r\n            return true;\r\n        }\r\n    }\r\n    joinGame(){\r\n        var apiUrl = \"https://mbanksrvr.herokuapp.com/games/\" + this.state.gameId;\r\n        fetch(apiUrl)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            if(data[0].password !== this.state.gamePassword)\r\n            {\r\n                console.log(\"wrong password\");\r\n                // ovdi ogromna greska... upises id vrati se citav objekt ! na temelju samo id-a vrati i id i sifru\r\n            }else {\r\n                sessionStorage.setItem(\"gameId\", data[0]._id);\r\n                this.setState({redirectToGame : true})\r\n            }\r\n        });\r\n\r\n    }\r\n    findGame(){\r\n        var apiUrl = \"https://mbanksrvr.herokuapp.com/games/\" + sessionStorage.getItem(\"userData\").split(',')[0];\r\n        fetch(apiUrl)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({foundGame : data})\r\n            console.log(this.state);\r\n        });\r\n    }\r\n\r\n    change(e){\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem(\"userData\");\r\n        this.setState({redirect: true});\r\n    }\r\n    componentDidMount(){\r\n        if(sessionStorage.getItem(\"userData\"))\r\n        {\r\n            this.findGame();\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        if(sessionStorage.getItem(\"userData\")){\r\n        }else {\r\n            this.setState({redirect: true});\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.redirect){\r\n            return(<Redirect to=\"./login\"/>);\r\n        }\r\n        if(this.state.redirectToGame){\r\n            return(<Redirect to=\"./game\"/>);\r\n        }\r\n        var username = sessionStorage.getItem(\"userData\").split(',')[1]\r\n        return(\r\n            <div>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"login\"><img src=\"eurocoin_64px.png\" alt=\"\"></img>MBank</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"help\">Help</Nav.Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Nav.Link >\r\n                                Player <strong>{username}</strong>\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"\" onClick={this.logout}>Logout</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                 <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Jumbotron id=\"AppJumbotron\">\r\n                                <p> \r\n                                    <h3>Create a new game or join an existing game</h3>\r\n                                </p>\r\n                            </Jumbotron>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container className=\"HomeForm\">\r\n                    <Row>\r\n                        <Col>\r\n                        <CreateGameModal showModal={this.state.showCreateGameModal} handleRedirect={this.handleRedirect}></CreateGameModal>\r\n                        <JoinGameModal showModal={this.state.showJoinGameModal} handleRedirect={this.handleRedirect}></JoinGameModal>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Button variant=\"outline-success\" onClick= {this.showCreateGameModal}>Create Game</Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button variant=\"outline-primary\" onClick = {this.showJoinGameModal}>Join Game</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;\r\n","import io from 'socket.io-client';\r\n\r\n\r\nexport const Socket = io(\"https://mbanksrvr.herokuapp.com\"); // http://localhost:3002","import React from 'react';\r\nimport './Message.css';\r\nconst Message = (props) => {\r\n    var userCurrent = props.message.username;\r\n    var text = props.message.text;\r\n    var time = props.message.time;\r\n    var otherUser = props.message.otherUser;\r\n    var type = props.message.type;\r\n\r\n    return (\r\n        <div className=\"message\">\r\n            {type == \"userStatus\" ? <div className=\"messageImageUserJoined\"></div> : <div className=\"messageImage\"></div>}\r\n            <div className=\"messageHeader\">\r\n                <div className=\"messageTitle\">{userCurrent}</div>\r\n                <div className=\"messageTime\">{time}</div>\r\n            </div>\r\n            <div className=\"messageBody\">\r\n                    {text}\r\n            </div>\r\n        </div>   \r\n    );\r\n    \r\n}\r\n\r\nexport default Message;\r\n\r\n// sent {text}<img src=\"https://image.flaticon.com/icons/svg/138/138281.svg\"/> to {usertoSent}","import React from 'react';\r\nimport './Transaction.css';\r\nconst Transaction = (props) => {\r\n\r\n    var username = props.message.username;\r\n    var amount = props.message.text;\r\n    var otherUser = props.message.otherUser;\r\n    var time = props.message.time;\r\n    return (\r\n        <div className=\"transaction\">\r\n            <div className=\"transactionImage\">\r\n            </div>\r\n            <div className=\"transactionHeader\">\r\n                <div className=\"transactionTitle\">Transaction</div>\r\n                <div className=\"transactionTime\">{time}</div>\r\n            </div>\r\n            <div className=\"transactionBody\">\r\n                <div className=\"transactionDetails\"> {username} &#8594; {otherUser} ({amount} &#8364;)</div>\r\n            </div>\r\n        </div>   \r\n    );\r\n}\r\n\r\nexport default Transaction;","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport {Socket} from '../../Services/Socket'; \r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Message from '../Message/Message';\r\nimport Transaction from '../Transaction/Transaction';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n\r\n    var username = sessionStorage.getItem(\"userData\").split(',')[1]; \r\n    var game = sessionStorage.getItem(\"game\");\r\n    var gameAmount = sessionStorage.getItem(\"game\").split(\",\")[2];\r\n    if(game){\r\n        game = game.split(',')[1];  \r\n    } \r\n    const [connected, setConnected] = useState(false);\r\n    const [welcomeMessage, setWelcomeMessage] = useState(\"\");\r\n    const [gameMessages, setGameMessages] = useState([]);\r\n    const [usersInGame, setUsersInGame] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        // separate chats to rooms/games\r\n        Socket.emit(\"joinRoom\", {username, game, gameAmount});\r\n\r\n        Socket.on(\"welcomeMessage\", (message) => {\r\n            setWelcomeMessage(message);\r\n            setConnected(true)\r\n        });\r\n\r\n        Socket.on(\"message\", (message) => {\r\n            console.log(message);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Socket.on(\"gameMessage\", (gameMessage) => {\r\n            setGameMessages([...gameMessages, gameMessage]);\r\n        });\r\n    // stavljas ovaj [] jer tada ga samo zelis koristit, kad se gameMessages minjaju    \r\n    },[gameMessages]);\r\n\r\n    useEffect(() => {\r\n        Socket.on(\"usersInGame\", (data) => {\r\n            setUsersInGame(data.users);\r\n        }); \r\n    },[usersInGame]);\r\n\r\n    useEffect(() => {\r\n        Socket.on(\"transaction\", (newTransaction) => {\r\n            setGameMessages([...gameMessages, newTransaction]);\r\n        }); \r\n    },[gameMessages]);\r\n\r\n    return(\r\n    <div>\r\n        <Container id=\"gameChat\">\r\n            <Row>\r\n                <Col>\r\n                    <Message message={welcomeMessage}></Message>\r\n                    {gameMessages.map((gameMessage, i) => {\r\n                        if(gameMessage.type == \"transaction\"){\r\n                            return(<Transaction key={i} message={gameMessage}></Transaction>);\r\n                        }else if (gameMessage.type == \"message\"){\r\n                            return(<Message key={i} message={gameMessage}></Message>);\r\n                        }else if (gameMessage.type == \"userStatus\"){\r\n                            return(<Message key={i} message={gameMessage}></Message>);\r\n                        }\r\n                        }\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default Chat;","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport {Socket} from '../../../Services/Socket'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './SendMoney.css';\r\n\r\nconst SendMoneyModal = (props) => {\r\n    \r\n    \r\n    var commaClicked = false;\r\n    var username = sessionStorage.getItem(\"userData\").split(',')[1];\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [amount, setAmount] = useState([]);\r\n\r\n    const handleModalClose = () => {\r\n        setAmount([]);\r\n        setShowModal(false);\r\n    };\r\n\r\n    var makeTransaction = (e) =>{\r\n        var money = amount.join('');\r\n        console.log(\"HEEEJ \" + money);\r\n        Socket.emit(\"transaction\",{username: username, amountArray: money, otherUser: props.userClicked});\r\n        setAmount([]);\r\n    }\r\n    var changeAmount = (e, input) => {\r\n        if(input == \"clear\"){\r\n            if(amount.length > 0){\r\n                setAmount(amount.slice(0,-1));\r\n            }\r\n        }else {\r\n            setAmount((state) => [...state, input])\r\n            //amount += input;         \r\n        }\r\n        console.log(amount);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    };\r\n    useEffect(() => {\r\n        setShowModal(props.showModal)\r\n      },[props.showModal]);\r\n\r\n    return(\r\n        <div>\r\n            <Modal className=\"modalCreateGame\"show={showModal} onHide={handleModalClose}>\r\n                <Modal.Header closeButton>&#8364; <strong>{amount}</strong>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                   <div className=\"main\">\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"1\")}}>1</Button>\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"2\")}}>2</Button>\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"3\")}}>3</Button>\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"4\")}}>4</Button>\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"5\")}}>5</Button>\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"6\")}}>6</Button>\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"7\")}}>7</Button>\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"8\")}}>8</Button>\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"9\")}}>9</Button>\r\n                       <Button variant=\"outline-info\" onClick={(e) => {changeAmount(e, \"0\")}}>0</Button>\r\n                       <Button variant=\"outline-warning\" onClick={(e) => {changeAmount(e, \"clear\")}}>Clear</Button>\r\n\r\n                   </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={handleModalClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"outline-success\" onClick={(e)=> makeTransaction(e)}>\r\n                    Send to <strong>{props.userClicked}</strong>\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SendMoneyModal;","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport './User.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Socket} from '../../Services/Socket';\r\nimport SendMoneyModal from '../Home/Modals/SendMoney';\r\n\r\nconst User = (props) => {\r\n    var userCurrent = sessionStorage.getItem(\"userData\").split(',')[1];\r\n    var username = props.user.username;\r\n    var amount = props.user.amount;\r\n    return(\r\n        <div className=\"mainUser\">\r\n            { username != userCurrent ? \r\n                <Button variant=\"outline-dark\">\r\n                    <div className=\"playerName\"><strong>{username}</strong></div>\r\n                    <div className=\"playerAmount\">{amount} &#8364;</div>\r\n                </Button> : \r\n                <Button variant=\"light\" disabled>\r\n                <div className=\"playerName\"><strong>{username}</strong></div>\r\n                <div className=\"playerAmount\">{amount} &#8364;</div>\r\n            </Button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default User;\r\n","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport './UserList.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Socket} from '../../Services/Socket';\r\nimport SendMoneyModal from '../Home/Modals/SendMoney';\r\nimport User from '../UserList/User';\r\n\r\nconst UserList = () => {\r\n\r\n    var username = sessionStorage.getItem(\"userData\").split(',')[1];\r\n    const [usersInGame, setUsersInGame] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        Socket.on(\"usersInGame\", (data) => {\r\n            setUsersInGame(data.users);\r\n        });\r\n    },[usersInGame]);\r\n\r\n    useEffect(()=>{\r\n        Socket.on(\"usersAfterTransaction\", (data) => {\r\n            setUsersInGame(data.users);\r\n        });\r\n    }, []);\r\n\r\n    var changeShowModal = () => {\r\n        if(showModal){\r\n            setShowModal(false);\r\n        }else{\r\n            setShowModal(true); \r\n        }\r\n    };\r\n\r\n    return(\r\n        <div style={{display: 'grid', gridTemplateColumns: 'repeat(auto-fill, 80px)', gridGap: '10px', gridAutoRows: 'minMax(60px, 60px)'}}>\r\n            {usersInGame.map((user, i) => {\r\n                if(user.username == username){\r\n                    return(\r\n                        <div className=\"main\" key={i}>\r\n                            <User user={user}></User>\r\n                        </div>\r\n                    )\r\n                }else {\r\n                    return(\r\n                        <div className=\"main\" onClick={changeShowModal} key = {i}>\r\n                            <User user={user}></User>\r\n                            <SendMoneyModal showModal={showModal} userClicked={user.username} userAmount={user.amount}></SendMoneyModal>\r\n                        </div>\r\n                    )\r\n                }\r\n                })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {Socket} from '../../Services/Socket'; \r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Chat from '../Chat/Chat';\r\nimport UserList from '../UserList/UserList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Game.css';\r\nclass Game extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            gameName: '',\r\n            homeRedirect: false,\r\n            loginRedirect: false,\r\n            usersInGame: [],\r\n            showModal: false\r\n        }\r\n        this.exitGame = this.exitGame.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n    }\r\n    submit = (event) => {\r\n        console.log(event.target.elements.money);\r\n        var username = sessionStorage.getItem(\"userData\").split(',')[1];\r\n        var gameMessage = event.target.elements.formMessage.value;\r\n        var money = event.target.elements.money.options;\r\n        var selectedIndex = money.selectedIndex;\r\n        var sendToUser = money[selectedIndex].value;  \r\n        event.target.elements.formMessage.value = null;\r\n        event.target.elements.formMessage.focus();\r\n        event.preventDefault();\r\n\r\n        // emit message to the server\r\n        Socket.emit(\"gameMessage\",{username: username, text: gameMessage, otherUser: sendToUser});\r\n    }\r\n    showModal(){\r\n        console.log(\"showModal\");\r\n        if(this.state.showModal){\r\n            this.setState({showModal : false}, console.log(this.state.showModal));\r\n        }else{\r\n            this.setState({showModal : true}, console.log(this.state.showModal));\r\n        }\r\n    }\r\n    \r\n    exitGame(){\r\n        sessionStorage.removeItem(\"game\");\r\n        this.setState({homeRedirect: true});\r\n    }\r\n    logout(){\r\n        sessionStorage.removeItem(\"userData\");\r\n        this.setState({loginRedirect: true});\r\n    }\r\n\r\n    // prije je bilo componentWillMount\r\n    componentDidMount(){\r\n        if(sessionStorage.getItem(\"game\")){\r\n            this.setState({gameName: sessionStorage.getItem(\"game\")});\r\n            this.setState({username: sessionStorage.getItem(\"userData\").split(\",\")[1]});\r\n        }else {\r\n            this.setState({homeRedirect: true});\r\n        }\r\n\r\n        Socket.on(\"usersInGame\", (data) => {\r\n            this.setState({usersInGame: data.users});\r\n            console.log(this.state.usersInGame);\r\n        }); \r\n    }   \r\n  render(){\r\n    if(!sessionStorage.getItem(\"userData\")){\r\n        return(\r\n            <Route>\r\n                <Redirect to={'./login'}/>\r\n            </Route>);\r\n    }\r\n    if(!sessionStorage.getItem(\"game\")){\r\n        return(\r\n            <Route>\r\n                <Redirect to={'./home'}/>\r\n            </Route>);\r\n    }\r\n    if(this.state.homeRedirect){\r\n        return(\r\n            <Route>\r\n                <Redirect to={'./home'}/>\r\n            </Route>);\r\n    } \r\n    if(this.state.loginRedirect){\r\n        return(\r\n            <Route>\r\n                <Redirect to={'./login'}/>\r\n            </Route>);\r\n    }  \r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"login\"><img src=\"eurocoin_64px.png\" alt=\"\"></img>MBank</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"help\">Help</Nav.Link>\r\n                        <Nav.Link>\r\n                            <Button variant=\"outline-secondary\" size=\"sm\">\r\n                                <img src=\"central_bank_euro.png\" width=\"25px\" height=\"25px\"></img> Send\r\n                            </Button>\r\n                        </Nav.Link>\r\n                        <Nav.Link>\r\n                            <Button variant=\"outline-secondary\" size=\"sm\">\r\n                                <img src=\"central_bank_euro.png\" width=\"25px\" height=\"25px\"></img> Get\r\n                            </Button>\r\n                        </Nav.Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Nav.Link >\r\n                                Player <strong>{sessionStorage.getItem(\"userData\").split(\",\")[1]}</strong>\r\n                            </Nav.Link>\r\n                            <Nav.Link >\r\n                                Game <strong>{sessionStorage.getItem(\"game\").split(\",\")[1]}</strong>\r\n                            </Nav.Link>\r\n                            <Nav.Link href=\"\" onClick={this.exitGame}>Exit Game </Nav.Link>\r\n                            <Nav.Link href=\"\" onClick={this.logout}>Log out </Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n            </Navbar>\r\n            <div className=\"GameDiv\">\r\n                <div className=\"gameMainDispayDiv\">\r\n                    <div id=\"chatDiv\">\r\n                        <Chat></Chat>\r\n                    </div>\r\n                    <div id=\"userListDiv\">\r\n                        <UserList onClick= {this.showModal}></UserList>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    );    \r\n  }\r\n}\r\nexport default Game;\r\n//<Button id=\"exitButton\" variant=\"outline-dark\"  onClick= {this.exitGame}>Exit game</Button>\r\n//<Button id=\"signoutButton\" variant=\"outline-dark\"  onClick= {this.register}>Sign Out</Button>","import React from 'react';\nimport './Components/Login/Login';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './Components/Login/Login';\nimport Home from './Components/Home/Home';\nimport Game from './Components/Game/Game';\nimport {Route, Switch} from 'react-router-dom';\n\nclass App extends React.Component{\n\n  render(){     \n    return (\n      <div className=\"shadow-box-example hoverable\" >\n        <Switch>  \n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/home\" exact component={Home} />\n          <Route path=\"/game\" exact component={Game} />\n        </Switch>\n      </div>      \n    );    \n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}